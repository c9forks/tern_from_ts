{
  "Hapi": {
    "ServerOptions": {
      "app": "?",
      "cache": "?",
      "cors": "?",
      "security": "?",
      "debug": {
        "request": "?"
      },
      "files": {
        "relativeTo": "string",
        "etagsCacheMaxSize": "number"
      },
      "json": {
        "replacer": "?",
        "space": "number"
      },
      "labels": "?",
      "load": {
        "maxHeapUsedBytes": "number",
        "maxRssBytes": "number",
        "maxEventLoopDelay": "number",
        "sampleInterval": "number"
      },
      "location": "string",
      "payload": {
        "maxBytes": "number",
        "uploads": "string"
      },
      "plugins": "?",
      "router": {
        "isCaseSensitive": "bool",
        "stripTrailingSlash": "bool"
      },
      "state": {
        "cookies": {
          "parse": "bool",
          "failAction": "string",
          "clearInvalid": "bool",
          "strictHeader": "bool"
        }
      },
      "timeout": {
        "server": "?",
        "client": "?",
        "socket": "?"
      },
      "tls": "?",
      "maxSockets": "number",
      "validation": "?",
      "views": "ServerView"
    },
    "Pack": {
      "prototype": {
        "require": "fn(name: string, options: [object Object], callback: Function)",
        "register": "fn(plugins: ?, options?: Object, callback?: Function, state?: Object)"
      }
    },
    "ServerView": {
      "engines": {
        "module": "string",
        "compile": "?"
      },
      "defaultExtension": "string",
      "path": "string",
      "partialsPath": "string",
      "helpersPath": "string",
      "basePath": "string",
      "layout": "bool",
      "layoutPath": "string",
      "layoutKeyword": "string",
      "encoding": "string",
      "isCached": "bool",
      "allowAbsolutePaths": "bool",
      "allowInsecureAccess": "bool",
      "compileOptions": "?",
      "runtimeOptions": "?",
      "contentType": "string",
      "compileMode": "string"
    },
    "RouteOptions": {
      "path": "string",
      "method": "string",
      "vhost": "?",
      "handler": "?"
    },
    "Server": {
      "prototype": {
        "app": "?",
        "methods": "?",
        "info": {
          "port": "number",
          "host": "string",
          "protocol": "string",
          "uri": "string"
        },
        "listener": "?",
        "load": {
          "eventLoopDelay": "number",
          "heapUsed": "number",
          "rss": "number"
        },
        "pack": "Pack",
        "plugins": {},
        "start": "fn(callback?: fn())",
        "stop": "fn(options?: [object Object], callback?: fn())",
        "route": "fn(options: RouteOptions)",
        "table": "fn(host?: string) -> ?",
        "log": "fn(tags: string, data?: string, timestamp?: number)",
        "connection": "fn(options?: ServerOptions)",
        "state": "fn(name: string, options?: [object Object])",
        "views": "fn(options: ServerView)",
        "cache": "fn(name: string, options: [object Object])",
        "auth": {
          "scheme": "fn(name: string, scheme: [object Object])",
          "strategy": "?"
        },
        "ext": "fn(event: ?, method: string, options?: ?)",
        "method": "fn(method: ?)",
        "inject": "fn(options: ?, callback: ?)",
        "handler": "fn(name: string, method: fn(name: string, options: ?))"
      }
    },
    "Request": {
      "app": "?",
      "auth": {
        "isAuthenticated": "bool",
        "credentials": "?",
        "artifacts": "?",
        "session": "?"
      },
      "domain": "?",
      "headers": "?",
      "id": "number",
      "info": {
        "received": "number",
        "remoteAddress": "string",
        "remotePort": "number",
        "referrer": "string",
        "host": "string"
      },
      "method": "string",
      "mime": "string",
      "params": "?",
      "path": "string",
      "payload": "?",
      "plugins": "?",
      "pre": "?",
      "response": "?",
      "responses": "?",
      "query": "?",
      "raw": {
        "req": "?",
        "res": "?"
      },
      "route": "string",
      "server": "Server",
      "session": "?",
      "state": "?",
      "url": "?",
      "setUrl": "fn(url: string)",
      "setMethod": "fn(method: string)",
      "log": "fn(tags: string, data?: string, timestamp?: number)",
      "getLog": "fn() -> [string]",
      "tail": "fn(name?: string) -> Function"
    },
    "Response": {
      "statusCode": "number",
      "headers": "?",
      "source": "?",
      "variety": "string",
      "app": "?",
      "plugins": "?",
      "settings": {
        "encoding": "string",
        "charset": "string",
        "location": "string",
        "ttl": "number",
        "stringify": "?",
        "passThrough": "bool"
      },
      "code": "fn(statusCode: number)",
      "header": "fn(name: string, value: string, options?: [object Object])",
      "type": "fn(mimeType: string)",
      "bytes": "fn(length: number)",
      "vary": "fn(header: string)",
      "location": "fn(location: string)",
      "created": "fn(location: string)",
      "redirect": "fn(location: string)",
      "encoding": "fn(encoding: string)",
      "charset": "fn(charset: string)",
      "ttl": "fn(ttl: number)",
      "state": "fn(name: string, value: string, options?: ?)",
      "unstate": "fn(name: string)",
      "replacer": "fn(method: Function)",
      "spaces": "fn(count: number)",
      "temporary": "fn(isTemporary: bool)",
      "permanent": "fn(isPermanent: bool)",
      "rewritable": "fn(isRewritable: bool)"
    },
    "reply": {
      "file": "fn(path: string, options: [object Object])",
      "view": "fn(template: string, context?: ?, options?: ?) -> Response",
      "close": "fn(options?: ?)",
      "proxy": "fn(options: ?)",
      "reply": "fn(result: ?) -> ?"
    },
    "createServer": "fn(host: string, port: number, options?: ServerOptions) -> Server"
  },
  "hapi": "Hapi",
  "!name": "hapi.d.ts"
}

{
  "URIOptions": {
    "protocol": "string",
    "username": "string",
    "password": "string",
    "hostname": "string",
    "port": "string",
    "path": "string",
    "query": "string",
    "fragment": "string"
  },
  "URI": {
    "!type": "fn()",
    "parse": "fn(url: string) -> ret",
    "parseAuthority": "fn(url: string, parts: [object Object]) -> string",
    "parseUserinfo": "fn(url: string, parts: [object Object]) -> string",
    "parseHost": "fn(url: string, parts: [object Object]) -> string",
    "parseQuery": "fn(url: string) -> Object",
    "build": "fn(parts: [object Object]) -> string",
    "buildAuthority": "fn(parts: [object Object]) -> string",
    "buildUserinfo": "fn(parts: [object Object]) -> string",
    "buildHost": "fn(parts: [object Object]) -> string",
    "buildQuery": "fn(qry: Object) -> string",
    "encode": "fn(str: string) -> string",
    "decode": "fn(str: string) -> string",
    "encodeReserved": "fn(str: string) -> string",
    "encodeQuery": "fn(qry: string) -> string",
    "decodeQuery": "fn(qry: string) -> string",
    "addQuery": "fn(data: Object, prop: string, value: string) -> Object",
    "removeQuery": "fn(data: Object, prop: string, value: string) -> Object",
    "commonPath": "fn(path1: string, path2: string) -> string",
    "withinString": "fn(source: string, func: fn(url: string)) -> string",
    "iso8859": "fn()",
    "unicode": "fn()",
    "expand": "fn(template: string, vals: Object) -> URI",
    "prototype": {
      "clone": "fn() -> URI",
      "href": "fn() -> string",
      "scheme": "fn() -> string",
      "protocol": "fn() -> string",
      "username": "fn() -> string",
      "password": "fn() -> string",
      "port": "fn() -> string",
      "hostname": "fn() -> string",
      "host": "fn() -> string",
      "userinfo": "fn() -> string",
      "authority": "fn() -> string",
      "domain": "fn() -> string",
      "subdomain": "fn() -> string",
      "tld": "fn() -> string",
      "path": "fn() -> string",
      "pathname": "fn() -> string",
      "directory": "fn() -> string",
      "filename": "fn() -> string",
      "suffix": "fn() -> string",
      "segment": "fn() -> [string]",
      "search": "fn() -> string",
      "query": "fn() -> string",
      "hash": "fn() -> string",
      "fragment": "fn() -> string",
      "resource": "fn() -> string",
      "is": "fn(qry: string) -> bool",
      "addSearch": "fn(qry: string) -> URI",
      "addQuery": "fn(qry: string) -> URI",
      "removeSearch": "fn(qry: string) -> URI",
      "removeQuery": "fn(qry: string) -> URI",
      "addFragment": "fn(fragment: string) -> URI",
      "fragmentPrefix": "fn(prefix: string)",
      "normalize": "fn() -> URI",
      "normalizeProtocol": "fn() -> URI",
      "normalizeHostname": "fn() -> URI",
      "normalizePort": "fn() -> URI",
      "normalizePathname": "fn() -> URI",
      "normalizePath": "fn() -> URI",
      "normalizeSearch": "fn() -> URI",
      "normalizeQuery": "fn() -> URI",
      "normalizeHash": "fn() -> URI",
      "normalizeFragment": "fn() -> URI",
      "iso8859": "fn() -> URI",
      "unicode": "fn() -> URI",
      "readable": "fn() -> string",
      "relativeTo": "fn(path: string) -> URI",
      "absoluteTo": "fn(path: string) -> URI",
      "equals": "fn() -> bool"
    }
  },
  "JQuery": {
    "uri": "fn() -> URI"
  },
  "!name": "URI.d.ts",
  "!define": {
    "ret": {
      "protocol": "string",
      "username": "string",
      "password": "string",
      "hostname": "string",
      "port": "string",
      "path": "string",
      "query": "string",
      "fragment": "string"
    }
  }
}

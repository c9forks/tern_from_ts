{
  "SIPml": {
    "Event": {
      "prototype": {
        "description": "string",
        "type": "string",
        "getContent": "fn() -> Object",
        "getContentString": "fn() -> string",
        "getContentType": "fn() -> Object",
        "getSipResponseCode": "fn() -> number"
      }
    },
    "EventTarget": {
      "prototype": {
        "addEventListener": "fn(type: ?, listener: Function)",
        "removeEventListener": "fn(type: ?)"
      }
    },
    "Session": {
      "prototype": {
        "accept": "fn(configuration?: Session.Configuration) -> number",
        "getId": "fn() -> number",
        "getRemoteFriendlyName": "fn() -> string",
        "getRemoteUri": "fn() -> string",
        "reject": "fn(configuration?: Session.Configuration) -> number",
        "setConfiguration": "fn(configuration?: Session.Configuration)"
      },
      "Configuration": {
        "audio_remote": "HTMLElement",
        "bandwidth": "Object",
        "expires": "number",
        "from": "string",
        "sip_caps": "[Object]",
        "sip_headers": "[Object]",
        "video_local": "HTMLElement",
        "video_remote": "HTMLElement",
        "video_size": "Object"
      },
      "Call": {
        "prototype": {
          "acceptTransfer": "fn(configuration?: Session.Configuration) -> number",
          "call": "fn(to: string, configuration?: Session.Configuration) -> number",
          "dtmf": "fn() -> number",
          "hangup": "fn(configuration?: Session.Configuration) -> number",
          "hold": "fn(configuration?: Session.Configuration) -> number",
          "info": "fn() -> number",
          "rejectTransfer": "fn() -> number",
          "resume": "fn() -> number",
          "transfer": "fn() -> number"
        }
      },
      "Event": {
        "prototype": {
          "session": "Session",
          "getTransferDestinationFriendlyName": "fn() -> string"
        }
      },
      "Message": {
        "prototype": {
          "send": "fn(to: string, content?: ?, contentType?: string, configuration?: Session.Configuration) -> number"
        }
      },
      "Publish": {
        "prototype": {
          "publish": "fn(content?: ?, contentType?: string, configuration?: Session.Configuration) -> number",
          "unpublish": "fn(configuration?: Session.Configuration)"
        }
      },
      "Registration": {
        "prototype": {
          "register": "fn(configuration?: Session.Configuration)",
          "unregister": "fn(configuration?: Session.Configuration)"
        }
      },
      "Subscribe": {
        "prototype": {
          "subscribe": "fn(to: string, configuration?: Session.Configuration) -> number",
          "unsubscribe": "fn(configuration?: Session.Configuration) -> number"
        }
      }
    },
    "Stack": {
      "!type": "fn(configuration?: Stack.Configuration)",
      "prototype": {
        "setConfiguration": "fn(configuration: Stack.Configuration) -> number",
        "newSession": "fn(type: string, configuration?: Session.Configuration) -> ?",
        "start": "fn() -> number",
        "stop": "fn(timeout?: number) -> number"
      },
      "Configuration": {
        "bandwidth": "Object",
        "display_name": "string",
        "enable_click2call": "bool",
        "enable_early_ims": "bool",
        "enable_media_stream_cache": "bool",
        "enable_rtcweb_breaker": "bool",
        "events_listener": "Object",
        "ice_servers": "[Object]",
        "impi": "string",
        "impu": "string",
        "outbound_proxy_url": "string",
        "password": "string",
        "realm": "string",
        "sip_headers": "[Object]",
        "video_size": "Object",
        "websocket_proxy_url": "string"
      },
      "Event": {
        "prototype": {
          "description": "string",
          "newSession": "Session",
          "type": "string"
        }
      }
    },
    "getNavigatorFriendlyName": "fn() -> string",
    "getNavigatorVersion": "fn() -> string",
    "getSystemFriendlyName": "fn() -> string",
    "getWebRtc4AllVersion": "fn() -> string",
    "haveMediaStream": "fn() -> bool",
    "init": "fn(readyCallback?: fn(e: ?), errorCallback?: fn(e: ?)) -> bool",
    "isInitialized": "fn() -> bool",
    "isNavigatorOutdated": "fn() -> bool",
    "isReady": "fn() -> bool",
    "isScreenShareSupported": "fn() -> bool",
    "isWebRtcPluginOutdated": "fn() -> bool",
    "isWebRtc4AllSupported": "fn() -> bool",
    "isWebRtcSupported": "fn() -> bool",
    "isWebSocketSupported": "fn() -> bool",
    "setDebugLevel": "fn(level: string)",
    "setWebRtcType": "fn(type: string) -> bool"
  },
  "!name": "sipml.d.ts"
}

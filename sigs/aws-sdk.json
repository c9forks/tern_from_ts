{
  "aws-sdk": {
    "config": "ClientConfig",
    "Config": "fn(json: ?)",
    "Credentials": {
      "!type": "fn(accessKeyId: string, secretAccessKey: string, sessionToken?: string)",
      "prototype": {
        "accessKeyId": "string"
      }
    },
    "Logger": {
      "write": "fn(chunk: ?, encoding?: string, callback?: fn())",
      "log": "fn(messages: [?])"
    },
    "HttpOptions": {
      "proxy": "string",
      "agent": "?",
      "timeout": "number",
      "xhrAsync": "bool",
      "xhrWithCredentials": "bool"
    },
    "Services": {
      "autoscaling": "?",
      "cloudformation": "?",
      "cloudfront": "?",
      "cloudsearch": "?",
      "cloudsearchdomain": "?",
      "cloudtrail": "?",
      "cloudwatch": "?",
      "cloudwatchlogs": "?",
      "cognitoidentity": "?",
      "cognitosync": "?",
      "datapipeline": "?",
      "directconnect": "?",
      "dynamodb": "?",
      "ec2": "?",
      "elasticache": "?",
      "elasticbeanstalk": "?",
      "elastictranscoder": "?",
      "elb": "?",
      "emr": "?",
      "glacier": "?",
      "httpOptions": "HttpOptions",
      "iam": "?",
      "importexport": "?",
      "kinesis": "?",
      "opsworks": "?",
      "rds": "?",
      "redshift": "?",
      "route53": "?",
      "route53domains": "?",
      "s3": "?",
      "ses": "?",
      "simpledb": "?",
      "sns": "?",
      "sqs": "?",
      "storagegateway": "?",
      "sts": "?",
      "support": "?",
      "swf": "?"
    },
    "ClientConfigPartial": {
      "credentials": "Credentials",
      "region": "string",
      "computeChecksums": "bool",
      "convertResponseTypes": "bool",
      "logger": "Logger",
      "maxRedirects": "number",
      "maxRetries": "number",
      "paramValidation": "bool",
      "s3ForcePathStyle": "bool",
      "apiVersion": "?",
      "apiVersions": "Services",
      "signatureVersion": "string",
      "sslEnabled": "bool",
      "systemClockOffset": "number"
    },
    "ClientConfig": {
      "update": "fn(options: ClientConfigPartial, allUnknownKeys?: bool)",
      "getCredentials": "fn(callback: fn(err?: ?))",
      "loadFromPath": "fn(path: string)",
      "credentials": "Credentials",
      "region": "string"
    },
    "SQS": {
      "!type": "fn(options?: ?)",
      "prototype": {
        "client": "Sqs.Client"
      }
    },
    "SES": {
      "!type": "fn(options?: ?)",
      "prototype": {
        "client": "Ses.Client"
      }
    },
    "SNS": {
      "!type": "fn(options?: ?)",
      "prototype": {
        "client": "Sns.Client"
      }
    },
    "SimpleWorkflow": {
      "!type": "fn(options?: ?)",
      "prototype": {
        "client": "Swf.Client"
      }
    },
    "S3": {
      "!type": "fn(options?: ?)",
      "prototype": {
        "client": "s3.Client"
      }
    },
    "DynamoDB": {
      "!type": "fn(options?: ?)",
      "prototype": {}
    },
    "Sqs": {
      "Client": {
        "config": "ClientConfig",
        "sendMessage": "fn(params: SendMessageRequest, callback: fn(err: ?, data: SendMessageResult))",
        "sendMessageBatch": "fn(params: SendMessageBatchRequest, callback: fn(err: ?, data: SendMessageBatchResult))",
        "receiveMessage": "fn(params: ReceiveMessageRequest, callback: fn(err: ?, data: ReceiveMessageResult))",
        "deleteMessage": "fn(params: DeleteMessageRequest, callback: fn(err: ?, data: ?))",
        "deleteMessageBatch": "fn(params: DeleteMessageBatchRequest, callback: fn(err: ?, data: DeleteMessageBatchResult))",
        "createQueue": "fn(params: CreateQueueRequest, callback: fn(err: ?, data: CreateQueueResult))",
        "deleteQueue": "fn(params: DeleteQueueRequest, callback: fn(err: ?, data: ?))"
      },
      "SendMessageRequest": {
        "QueueUrl": "string",
        "MessageBody": "string",
        "DelaySeconds": "number"
      },
      "ReceiveMessageRequest": {
        "QueueUrl": "string",
        "MaxNumberOfMessages": "number",
        "VisibilityTimeout": "number",
        "AttributeNames": "[string]"
      },
      "DeleteMessageBatchRequest": {
        "QueueUrl": "string",
        "Entries": "[DeleteMessageBatchRequestEntry]"
      },
      "DeleteMessageBatchRequestEntry": {
        "Id": "string",
        "ReceiptHandle": "string"
      },
      "DeleteMessageRequest": {
        "QueueUrl": "string",
        "ReceiptHandle": "string"
      },
      "Attribute": {
        "prototype": {
          "Name": "string",
          "Value": "string"
        }
      },
      "SendMessageBatchRequest": {
        "QueueUrl": "string",
        "Entries": "[SendMessageBatchRequestEntry]"
      },
      "SendMessageBatchRequestEntry": {
        "prototype": {
          "Id": "string",
          "MessageBody": "string",
          "DelaySeconds": "number"
        }
      },
      "CreateQueueRequest": {
        "QueueName": "string",
        "DefaultVisibilityTimeout": "number",
        "DelaySeconds": "number",
        "Attributes": "[Attribute]"
      },
      "DeleteQueueRequest": {
        "QueueUrl": "string"
      },
      "SendMessageResult": {
        "prototype": {
          "MessageId": "string",
          "MD5OfMessageBody": "string"
        }
      },
      "ReceiveMessageResult": {
        "prototype": {
          "Messages": "[Message]"
        }
      },
      "Message": {
        "prototype": {
          "MessageId": "string",
          "ReceiptHandle": "string",
          "MD5OfBody": "string",
          "Body": "string",
          "Attributes": "[Attribute]"
        }
      },
      "DeleteMessageBatchResult": {
        "prototype": {
          "Successful": "[DeleteMessageBatchResultEntry]",
          "Failed": "[BatchResultErrorEntry]"
        }
      },
      "DeleteMessageBatchResultEntry": {
        "prototype": {
          "Id": "string"
        }
      },
      "BatchResultErrorEntry": {
        "prototype": {
          "Id": "string",
          "Code": "string",
          "Message": "string",
          "SenderFault": "string"
        }
      },
      "SendMessageBatchResult": {
        "prototype": {
          "Successful": "[SendMessageBatchResultEntry]",
          "Failed": "[BatchResultErrorEntry]"
        }
      },
      "SendMessageBatchResultEntry": {
        "prototype": {
          "Id": "string",
          "MessageId": "string",
          "MD5OfMessageBody": "string"
        }
      },
      "CreateQueueResult": {
        "prototype": {
          "QueueUrl": "string"
        }
      }
    },
    "Ses": {
      "Client": {
        "config": "ClientConfig",
        "sendEmail": "fn(params: ?, callback: fn(err: ?, data: SendEmailResult))"
      },
      "SendEmailRequest": {
        "Source": "string",
        "Destination": "Destination",
        "Message": "Message",
        "ReplyToAddresses": "[string]",
        "ReturnPath": "string"
      },
      "Destination": {
        "prototype": {
          "ToAddresses": "[string]",
          "CcAddresses": "[string]",
          "BccAddresses": "[string]"
        }
      },
      "Message": {
        "prototype": {
          "Subject": "Content",
          "Body": "Body"
        }
      },
      "Content": {
        "prototype": {
          "Data": "string",
          "Charset": "string"
        }
      },
      "Body": {
        "prototype": {
          "Text": "Content",
          "Html": "Content"
        }
      },
      "SendEmailResult": {
        "prototype": {
          "MessageId": "string"
        }
      }
    },
    "Swf": {
      "Client": {
        "prototype": {
          "config": "ClientConfig",
          "countClosedWorkflowExecutions": "fn(params: ?, callback: fn(err: ?, data: ?))",
          "countOpenWorkflowExecutions": "fn(params: ?, callback: fn(err: ?, data: ?))",
          "countPendingActivityTasks": "fn(params: ?, callback: fn(err: ?, data: ?))",
          "countPendingDecisionTasks": "fn(params: ?, callback: fn(err: ?, data: ?))",
          "deprecateActivityType": "fn(params: ?, callback: fn(err: ?, data: ?))",
          "deprecateDomain": "fn(params: ?, callback: fn(err: ?, data: ?))",
          "deprecateWorkflowType": "fn(params: ?, callback: fn(err: ?, data: ?))",
          "describeActivityType": "fn(params: ?, callback: fn(err: ?, data: ?))",
          "describeDomain": "fn(params: ?, callback: fn(err: ?, data: ?))",
          "describeWorkflowExecution": "fn(params: ?, callback: fn(err: ?, data: ?))",
          "describeWorkflowType": "fn(params: ?, callback: fn(err: ?, data: ?))",
          "getWorkflowExecutionHistory": "fn(params: ?, callback: fn(err: ?, data: ?))",
          "listActivityTypes": "fn(params: ?, callback: fn(err: ?, data: ?))",
          "listClosedWorkflowExecutions": "fn(params: ?, callback: fn(err: ?, data: ?))",
          "listDomains": "fn(params: ?, callback: fn(err: ?, data: ?))",
          "listOpenWorkflowExecutions": "fn(params: ?, callback: fn(err: ?, data: ?))",
          "listWorkflowTypes": "fn(params: ?, callback: fn(err: ?, data: ?))",
          "pollForActivityTask": "fn(params: ?, callback: fn(err: ?, data: ActivityTask))",
          "pollForDecisionTask": "fn(params: ?, callback: fn(err: ?, data: DecisionTask))",
          "recordActivityTaskHeartbeat": "fn(params: ?, callback: fn(err: ?, data: ?))",
          "registerActivityType": "fn(params: ?, callback: fn(err: ?, data: ?))",
          "registerDomain": "fn(params: ?, callback: fn(err: ?, data: ?))",
          "registerWorkflowType": "fn(params: ?, callback: fn(err: ?, data: ?))",
          "requestCancelWorkflowExecution": "fn(params: ?, callback: fn(err: ?, data: ?))",
          "respondActivityTaskCanceled": "fn(params: RespondActivityTaskCanceledRequest, callback: fn(err: ?, data: ?))",
          "respondActivityTaskCompleted": "fn(params: RespondActivityTaskCompletedRequest, callback: fn(err: ?, data: ?))",
          "respondActivityTaskFailed": "fn(params: RespondActivityTaskFailedRequest, callback: fn(err: ?, data: ?))",
          "respondDecisionTaskCompleted": "fn(params: RespondDecisionTaskCompletedRequest, callback: fn(err: ?, data: ?))",
          "signalWorkflowExecution": "fn(params: ?, callback: fn(err: ?, data: ?))",
          "startWorkflowExecution": "fn(params: ?, callback: fn(err: ?, data: StartWorkflowExecutionResult))",
          "terminateWorkflowExecution": "fn(params: ?, callback: fn(err: ?, data: ?))"
        }
      },
      "PollForActivityTaskRequest": {
        "domain": "string",
        "taskList": "TaskList",
        "identity": "string"
      },
      "TaskList": {
        "name": "string"
      },
      "PollForDecisionTaskRequest": {
        "domain": "string",
        "taskList": "TaskList",
        "identity": "string",
        "nextPageToken": "string",
        "maximumPageSize": "number",
        "reverseOrder": "Boolean"
      },
      "StartWorkflowExecutionRequest": {
        "domain": "string",
        "workflowId": "string",
        "workflowType": "WorkflowType",
        "taskList": "TaskList",
        "input": "string",
        "executionStartToCloseTimeout": "string",
        "tagList": "[string]",
        "taskStartToCloseTimeout": "string",
        "childPolicy": "string"
      },
      "WorkflowType": {
        "name": "string",
        "version": "string"
      },
      "RespondDecisionTaskCompletedRequest": {
        "taskToken": "string",
        "decisions": "[Decision]",
        "executionContext": "string"
      },
      "Decision": {
        "decisionType": "string",
        "scheduleActivityTaskDecisionAttributes": "ScheduleActivityTaskDecisionAttributes",
        "requestCancelActivityTaskDecisionAttributes": "RequestCancelActivityTaskDecisionAttributes",
        "completeWorkflowExecutionDecisionAttributes": "CompleteWorkflowExecutionDecisionAttributes",
        "failWorkflowExecutionDecisionAttributes": "FailWorkflowExecutionDecisionAttributes",
        "cancelWorkflowExecutionDecisionAttributes": "CancelWorkflowExecutionDecisionAttributes",
        "continueAsNewWorkflowExecutionDecisionAttributes": "ContinueAsNewWorkflowExecutionDecisionAttributes",
        "recordMarkerDecisionAttributes": "RecordMarkerDecisionAttributes",
        "startTimerDecisionAttributes": "StartTimerDecisionAttributes",
        "cancelTimerDecisionAttributes": "CancelTimerDecisionAttributes",
        "signalExternalWorkflowExecutionDecisionAttributes": "SignalExternalWorkflowExecutionDecisionAttributes",
        "requestCancelExternalWorkflowExecutionDecisionAttributes": "RequestCancelExternalWorkflowExecutionDecisionAttributes",
        "startChildWorkflowExecutionDecisionAttributes": "StartChildWorkflowExecutionDecisionAttributes"
      },
      "ScheduleActivityTaskDecisionAttributes": {
        "activityType": "ActivityType",
        "activityId": "string",
        "control": "string",
        "input": "string",
        "scheduleToCloseTimeout": "string",
        "taskList": "TaskList",
        "scheduleToStartTimeout": "string",
        "startToCloseTimeout": "string",
        "heartbeatTimeout": "string"
      },
      "ActivityType": {
        "name": "string",
        "version": "string"
      },
      "RequestCancelActivityTaskDecisionAttributes": {
        "activityId": "string"
      },
      "CompleteWorkflowExecutionDecisionAttributes": {
        "result": "string"
      },
      "FailWorkflowExecutionDecisionAttributes": {
        "reason": "string",
        "details": "string"
      },
      "CancelWorkflowExecutionDecisionAttributes": {
        "details": "string"
      },
      "ContinueAsNewWorkflowExecutionDecisionAttributes": {
        "input": "string",
        "executionStartToCloseTimeout": "string",
        "taskList": "TaskList",
        "taskStartToCloseTimeout": "string",
        "childPolicy": "string",
        "tagList": "[string]",
        "workflowTypeVersion": "string"
      },
      "RecordMarkerDecisionAttributes": {
        "markerName": "string",
        "details": "string"
      },
      "StartTimerDecisionAttributes": {
        "timerId": "string",
        "control": "string",
        "startToFireTimeout": "string"
      },
      "CancelTimerDecisionAttributes": {
        "timerId": "string"
      },
      "SignalExternalWorkflowExecutionDecisionAttributes": {
        "workflowId": "string",
        "runId": "string",
        "signalName": "string",
        "input": "string",
        "control": "string"
      },
      "RequestCancelExternalWorkflowExecutionDecisionAttributes": {
        "workflowId": "string",
        "runId": "string",
        "control": "string"
      },
      "StartChildWorkflowExecutionDecisionAttributes": {
        "workflowType": "WorkflowType",
        "workflowId": "string",
        "control": "string",
        "input": "string",
        "executionStartToCloseTimeout": "string",
        "taskList": "TaskList",
        "taskStartToCloseTimeout": "string",
        "childPolicy": "string",
        "tagList": "[string]"
      },
      "RespondActivityTaskCompletedRequest": {
        "taskToken": "string",
        "result": "string"
      },
      "RespondActivityTaskFailedRequest": {
        "taskToken": "string",
        "reason": "string",
        "details": "string"
      },
      "RespondActivityTaskCanceledRequest": {
        "taskToken": "string",
        "details": "string"
      },
      "DecisionTask": {
        "taskToken": "string",
        "startedEventId": "number",
        "workflowExecution": "WorkflowExecution",
        "workflowType": "WorkflowType",
        "events": "[HistoryEvent]",
        "nextPageToken": "string",
        "previousStartedEventId": "number"
      },
      "WorkflowExecution": {
        "workflowId": "string",
        "runId": "string"
      },
      "HistoryEvent": {
        "eventTimestamp": "?",
        "eventType": "string",
        "eventId": "number",
        "workflowExecutionStartedEventAttributes": "WorkflowExecutionStartedEventAttributes",
        "workflowExecutionCompletedEventAttributes": "WorkflowExecutionCompletedEventAttributes",
        "completeWorkflowExecutionFailedEventAttributes": "CompleteWorkflowExecutionFailedEventAttributes",
        "workflowExecutionFailedEventAttributes": "WorkflowExecutionFailedEventAttributes",
        "failWorkflowExecutionFailedEventAttributes": "FailWorkflowExecutionFailedEventAttributes",
        "workflowExecutionTimedOutEventAttributes": "WorkflowExecutionTimedOutEventAttributes",
        "workflowExecutionCanceledEventAttributes": "WorkflowExecutionCanceledEventAttributes",
        "cancelWorkflowExecutionFailedEventAttributes": "CancelWorkflowExecutionFailedEventAttributes",
        "workflowExecutionContinuedAsNewEventAttributes": "WorkflowExecutionContinuedAsNewEventAttributes",
        "continueAsNewWorkflowExecutionFailedEventAttributes": "ContinueAsNewWorkflowExecutionFailedEventAttributes",
        "workflowExecutionTerminatedEventAttributes": "WorkflowExecutionTerminatedEventAttributes",
        "workflowExecutionCancelRequestedEventAttributes": "WorkflowExecutionCancelRequestedEventAttributes",
        "decisionTaskScheduledEventAttributes": "DecisionTaskScheduledEventAttributes",
        "decisionTaskStartedEventAttributes": "DecisionTaskStartedEventAttributes",
        "decisionTaskCompletedEventAttributes": "DecisionTaskCompletedEventAttributes",
        "decisionTaskTimedOutEventAttributes": "DecisionTaskTimedOutEventAttributes",
        "activityTaskScheduledEventAttributes": "ActivityTaskScheduledEventAttributes",
        "activityTaskStartedEventAttributes": "ActivityTaskStartedEventAttributes",
        "activityTaskCompletedEventAttributes": "ActivityTaskCompletedEventAttributes",
        "activityTaskFailedEventAttributes": "ActivityTaskFailedEventAttributes",
        "activityTaskTimedOutEventAttributes": "ActivityTaskTimedOutEventAttributes",
        "activityTaskCanceledEventAttributes": "ActivityTaskCanceledEventAttributes",
        "activityTaskCancelRequestedEventAttributes": "ActivityTaskCancelRequestedEventAttributes",
        "workflowExecutionSignaledEventAttributes": "WorkflowExecutionSignaledEventAttributes",
        "markerRecordedEventAttributes": "MarkerRecordedEventAttributes",
        "timerStartedEventAttributes": "TimerStartedEventAttributes",
        "timerFiredEventAttributes": "TimerFiredEventAttributes",
        "timerCanceledEventAttributes": "TimerCanceledEventAttributes",
        "startChildWorkflowExecutionInitiatedEventAttributes": "StartChildWorkflowExecutionInitiatedEventAttributes",
        "childWorkflowExecutionStartedEventAttributes": "ChildWorkflowExecutionStartedEventAttributes",
        "childWorkflowExecutionCompletedEventAttributes": "ChildWorkflowExecutionCompletedEventAttributes",
        "childWorkflowExecutionFailedEventAttributes": "ChildWorkflowExecutionFailedEventAttributes",
        "childWorkflowExecutionTimedOutEventAttributes": "ChildWorkflowExecutionTimedOutEventAttributes",
        "childWorkflowExecutionCanceledEventAttributes": "ChildWorkflowExecutionCanceledEventAttributes",
        "childWorkflowExecutionTerminatedEventAttributes": "ChildWorkflowExecutionTerminatedEventAttributes",
        "signalExternalWorkflowExecutionInitiatedEventAttributes": "SignalExternalWorkflowExecutionInitiatedEventAttributes",
        "externalWorkflowExecutionSignaledEventAttributes": "ExternalWorkflowExecutionSignaledEventAttributes",
        "signalExternalWorkflowExecutionFailedEventAttributes": "SignalExternalWorkflowExecutionFailedEventAttributes",
        "externalWorkflowExecutionCancelRequestedEventAttributes": "ExternalWorkflowExecutionCancelRequestedEventAttributes",
        "requestCancelExternalWorkflowExecutionInitiatedEventAttributes": "RequestCancelExternalWorkflowExecutionInitiatedEventAttributes",
        "requestCancelExternalWorkflowExecutionFailedEventAttributes": "RequestCancelExternalWorkflowExecutionFailedEventAttributes",
        "scheduleActivityTaskFailedEventAttributes": "ScheduleActivityTaskFailedEventAttributes",
        "requestCancelActivityTaskFailedEventAttributes": "RequestCancelActivityTaskFailedEventAttributes",
        "startTimerFailedEventAttributes": "StartTimerFailedEventAttributes",
        "cancelTimerFailedEventAttributes": "CancelTimerFailedEventAttributes",
        "startChildWorkflowExecutionFailedEventAttributes": "StartChildWorkflowExecutionFailedEventAttributes"
      },
      "WorkflowExecutionStartedEventAttributes": {
        "input": "string",
        "executionStartToCloseTimeout": "string",
        "taskStartToCloseTimeout": "string",
        "childPolicy": "string",
        "taskList": "TaskList",
        "workflowType": "WorkflowType",
        "tagList": "[string]",
        "continuedExecutionRunId": "string",
        "parentWorkflowExecution": "WorkflowExecution",
        "parentInitiatedEventId": "number"
      },
      "WorkflowExecutionCompletedEventAttributes": {
        "result": "string",
        "decisionTaskCompletedEventId": "number"
      },
      "CompleteWorkflowExecutionFailedEventAttributes": {
        "cause": "string",
        "decisionTaskCompletedEventId": "number"
      },
      "WorkflowExecutionFailedEventAttributes": {
        "reason": "string",
        "details": "string",
        "decisionTaskCompletedEventId": "number"
      },
      "FailWorkflowExecutionFailedEventAttributes": {
        "cause": "string",
        "decisionTaskCompletedEventId": "number"
      },
      "WorkflowExecutionTimedOutEventAttributes": {
        "timeoutType": "string",
        "childPolicy": "string"
      },
      "WorkflowExecutionCanceledEventAttributes": {
        "details": "string",
        "decisionTaskCompletedEventId": "number"
      },
      "CancelWorkflowExecutionFailedEventAttributes": {
        "cause": "string",
        "decisionTaskCompletedEventId": "number"
      },
      "WorkflowExecutionContinuedAsNewEventAttributes": {
        "input": "string",
        "decisionTaskCompletedEventId": "number",
        "newExecutionRunId": "string",
        "executionStartToCloseTimeout": "string",
        "taskList": "TaskList",
        "taskStartToCloseTimeout": "string",
        "childPolicy": "string",
        "tagList": "[string]",
        "workflowType": "WorkflowType"
      },
      "ContinueAsNewWorkflowExecutionFailedEventAttributes": {
        "cause": "string",
        "decisionTaskCompletedEventId": "number"
      },
      "WorkflowExecutionTerminatedEventAttributes": {
        "reason": "string",
        "details": "string",
        "childPolicy": "string",
        "cause": "string"
      },
      "WorkflowExecutionCancelRequestedEventAttributes": {
        "externalWorkflowExecution": "WorkflowExecution",
        "externalInitiatedEventId": "number",
        "cause": "string"
      },
      "DecisionTaskScheduledEventAttributes": {
        "taskList": "TaskList",
        "startToCloseTimeout": "string"
      },
      "DecisionTaskStartedEventAttributes": {
        "identity": "string",
        "scheduledEventId": "number"
      },
      "DecisionTaskCompletedEventAttributes": {
        "executionContext": "string",
        "scheduledEventId": "number",
        "startedEventId": "number"
      },
      "DecisionTaskTimedOutEventAttributes": {
        "timeoutType": "string",
        "scheduledEventId": "number",
        "startedEventId": "number"
      },
      "ActivityTaskScheduledEventAttributes": {
        "activityType": "ActivityType",
        "activityId": "string",
        "input": "string",
        "control": "string",
        "scheduleToStartTimeout": "string",
        "scheduleToCloseTimeout": "string",
        "startToCloseTimeout": "string",
        "taskList": "TaskList",
        "decisionTaskCompletedEventId": "number",
        "heartbeatTimeout": "string"
      },
      "ActivityTaskStartedEventAttributes": {
        "identity": "string",
        "scheduledEventId": "number"
      },
      "ActivityTaskCompletedEventAttributes": {
        "result": "string",
        "scheduledEventId": "number",
        "startedEventId": "number"
      },
      "ActivityTaskFailedEventAttributes": {
        "reason": "string",
        "details": "string",
        "scheduledEventId": "number",
        "startedEventId": "number"
      },
      "ActivityTaskTimedOutEventAttributes": {
        "timeoutType": "string",
        "scheduledEventId": "number",
        "startedEventId": "number",
        "details": "string"
      },
      "ActivityTaskCanceledEventAttributes": {
        "details": "string",
        "scheduledEventId": "number",
        "startedEventId": "number",
        "latestCancelRequestedEventId": "number"
      },
      "ActivityTaskCancelRequestedEventAttributes": {
        "decisionTaskCompletedEventId": "number",
        "activityId": "string"
      },
      "WorkflowExecutionSignaledEventAttributes": {
        "signalName": "string",
        "input": "string",
        "externalWorkflowExecution": "WorkflowExecution",
        "externalInitiatedEventId": "number"
      },
      "MarkerRecordedEventAttributes": {
        "markerName": "string",
        "details": "string",
        "decisionTaskCompletedEventId": "number"
      },
      "TimerStartedEventAttributes": {
        "timerId": "string",
        "control": "string",
        "startToFireTimeout": "string",
        "decisionTaskCompletedEventId": "number"
      },
      "TimerFiredEventAttributes": {
        "timerId": "string",
        "startedEventId": "number"
      },
      "TimerCanceledEventAttributes": {
        "timerId": "string",
        "startedEventId": "number",
        "decisionTaskCompletedEventId": "number"
      },
      "StartChildWorkflowExecutionInitiatedEventAttributes": {
        "workflowId": "string",
        "workflowType": "WorkflowType",
        "control": "string",
        "input": "string",
        "executionStartToCloseTimeout": "string",
        "taskList": "TaskList",
        "decisionTaskCompletedEventId": "number",
        "childPolicy": "string",
        "taskStartToCloseTimeout": "string",
        "tagList": "[string]"
      },
      "ChildWorkflowExecutionStartedEventAttributes": {
        "workflowExecution": "WorkflowExecution",
        "workflowType": "WorkflowType",
        "initiatedEventId": "number"
      },
      "ChildWorkflowExecutionCompletedEventAttributes": {
        "workflowExecution": "WorkflowExecution",
        "workflowType": "WorkflowType",
        "result": "string",
        "initiatedEventId": "number",
        "startedEventId": "number"
      },
      "ChildWorkflowExecutionFailedEventAttributes": {
        "workflowExecution": "WorkflowExecution",
        "workflowType": "WorkflowType",
        "reason": "string",
        "details": "string",
        "initiatedEventId": "number",
        "startedEventId": "number"
      },
      "ChildWorkflowExecutionTimedOutEventAttributes": {
        "workflowExecution": "WorkflowExecution",
        "workflowType": "WorkflowType",
        "timeoutType": "string",
        "initiatedEventId": "number",
        "startedEventId": "number"
      },
      "ChildWorkflowExecutionCanceledEventAttributes": {
        "workflowExecution": "WorkflowExecution",
        "workflowType": "WorkflowType",
        "details": "string",
        "initiatedEventId": "number",
        "startedEventId": "number"
      },
      "ChildWorkflowExecutionTerminatedEventAttributes": {
        "workflowExecution": "WorkflowExecution",
        "workflowType": "WorkflowType",
        "initiatedEventId": "number",
        "startedEventId": "number"
      },
      "SignalExternalWorkflowExecutionInitiatedEventAttributes": {
        "workflowId": "string",
        "runId": "string",
        "signalName": "string",
        "input": "string",
        "decisionTaskCompletedEventId": "number",
        "control": "string"
      },
      "ExternalWorkflowExecutionSignaledEventAttributes": {
        "workflowExecution": "WorkflowExecution",
        "initiatedEventId": "number"
      },
      "SignalExternalWorkflowExecutionFailedEventAttributes": {
        "workflowId": "string",
        "runId": "string",
        "cause": "string",
        "initiatedEventId": "number",
        "decisionTaskCompletedEventId": "number",
        "control": "string"
      },
      "ExternalWorkflowExecutionCancelRequestedEventAttributes": {
        "workflowExecution": "WorkflowExecution",
        "initiatedEventId": "number"
      },
      "RequestCancelExternalWorkflowExecutionInitiatedEventAttributes": {
        "workflowId": "string",
        "runId": "string",
        "decisionTaskCompletedEventId": "number",
        "control": "string"
      },
      "RequestCancelExternalWorkflowExecutionFailedEventAttributes": {
        "workflowId": "string",
        "runId": "string",
        "cause": "string",
        "initiatedEventId": "number",
        "decisionTaskCompletedEventId": "number",
        "control": "string"
      },
      "ScheduleActivityTaskFailedEventAttributes": {
        "activityType": "ActivityType",
        "activityId": "string",
        "cause": "string",
        "decisionTaskCompletedEventId": "number"
      },
      "RequestCancelActivityTaskFailedEventAttributes": {
        "activityId": "string",
        "cause": "string",
        "decisionTaskCompletedEventId": "number"
      },
      "StartTimerFailedEventAttributes": {
        "timerId": "string",
        "cause": "string",
        "decisionTaskCompletedEventId": "number"
      },
      "CancelTimerFailedEventAttributes": {
        "timerId": "string",
        "cause": "string",
        "decisionTaskCompletedEventId": "number"
      },
      "StartChildWorkflowExecutionFailedEventAttributes": {
        "workflowType": "WorkflowType",
        "cause": "string",
        "workflowId": "string",
        "initiatedEventId": "number",
        "decisionTaskCompletedEventId": "number",
        "control": "string"
      },
      "ActivityTask": {
        "taskToken": "string",
        "activityId": "string",
        "startedEventId": "number",
        "workflowExecution": "WorkflowExecution",
        "activityType": "ActivityType",
        "input": "string"
      },
      "PollForActivityTaskResult": {
        "activityTask": "ActivityTask"
      },
      "PollForDecisionTaskResult": {
        "decisionTask": "DecisionTask"
      },
      "StartWorkflowExecutionResult": {
        "run": "Run"
      },
      "Run": {
        "runId": "string"
      }
    },
    "Sns": {
      "Client": {
        "config": "ClientConfig",
        "publicTopic": "fn(params: PublishRequest, callback: fn(err: ?, data: PublishResult))",
        "createTopic": "fn(params: CreateTopicRequest, callback: fn(err: ?, data: CreateTopicResult))",
        "deleteTopic": "fn(params: DeleteTopicRequest, callback: fn(err: ?, data: ?))"
      },
      "PublishRequest": {
        "TopicArn": "string",
        "Message": "string",
        "MessageStructure": "string",
        "Subject": "string"
      },
      "PublishResult": {
        "MessageId": "string"
      },
      "CreateTopicRequest": {
        "Name": "string"
      },
      "CreateTopicResult": {
        "TopicArn": "string"
      },
      "DeleteTopicRequest": {
        "TopicArn": "string"
      }
    },
    "s3": {
      "Client": {
        "config": "ClientConfig",
        "putObject": "fn(params: PutObjectRequest, callback: fn(err: ?, data: ?))",
        "getObject": "fn(params: GetObjectRequest, callback: fn(err: ?, data: ?))"
      },
      "PutObjectRequest": {
        "ACL": "string",
        "Body": "?",
        "Bucket": "string",
        "CacheControl": "string",
        "ContentDisposition": "string",
        "ContentEncoding": "string",
        "ContentLanguage": "string",
        "ContentLength": "string",
        "ContentMD5": "string",
        "ContentType": "string",
        "Expires": "?",
        "GrantFullControl": "string",
        "GrantRead": "string",
        "GrantReadACP": "string",
        "GrantWriteACP": "string",
        "Key": "string",
        "Metadata": "[string]",
        "ServerSideEncryption": "string",
        "StorageClass": "string",
        "WebsiteRedirectLocation": "string"
      },
      "GetObjectRequest": {
        "Bucket": "string",
        "IfMatch": "string",
        "IfModifiedSince": "?",
        "IfNoneMatch": "string",
        "IfUnmodifiedSince": "?",
        "Key": "string",
        "Range": "string",
        "ResponseCacheControl": "string",
        "ResponseContentDisposition": "string",
        "ResponseContentEncoding": "string",
        "ResponseContentLanguage": "string",
        "ResponseContentType": "string",
        "ResponseExpires": "?",
        "VersionId": "string"
      }
    }
  },
  "!name": "aws-sdk.d.ts"
}

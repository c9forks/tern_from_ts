{
  "MediaStreamConstraints": {
    "audio": "?",
    "video": "?",
    "prototype": "MediaStreamConstraints"
  },
  "MediaTrackConstraints": {
    "mandatory": "MediaTrackConstraintSet",
    "optional": "[MediaTrackConstraint]",
    "prototype": "MediaTrackConstraints"
  },
  "MediaTrackConstraintSet": {
    "prototype": "MediaTrackConstraintSet"
  },
  "MediaTrackConstraint": {
    "prototype": "MediaTrackConstraint"
  },
  "Navigator": {
    "getUserMedia": "fn(constraints: MediaStreamConstraints, successCallback: fn(stream: ?), errorCallback: fn(error: Error))",
    "webkitGetUserMedia": "fn(constraints: MediaStreamConstraints, successCallback: fn(stream: ?), errorCallback: fn(error: Error))",
    "mozGetUserMedia": "fn(constraints: MediaStreamConstraints, successCallback: fn(stream: ?), errorCallback: fn(error: Error))"
  },
  "EventHandler": {},
  "NavigatorUserMediaSuccessCallback": {},
  "NavigatorUserMediaError": {
    "PERMISSION_DENIED": "number",
    "code": "number",
    "prototype": "NavigatorUserMediaError"
  },
  "NavigatorUserMediaErrorCallback": {},
  "MediaStreamTrackList": {
    "length": "number",
    "item": "MediaStreamTrack",
    "add": "fn(track: MediaStreamTrack)",
    "remove": "fn(track: MediaStreamTrack)",
    "onaddtrack": "fn(event: Event)",
    "onremovetrack": "fn(event: Event)",
    "prototype": "MediaStreamTrackList"
  },
  "webkitMediaStreamTrackList": {
    "prototype": "MediaStreamTrackList"
  },
  "MediaStream": {
    "label": "string",
    "id": "string",
    "getAudioTracks": "fn() -> MediaStreamTrackList",
    "getVideoTracks": "fn() -> MediaStreamTrackList",
    "ended": "bool",
    "onended": "fn(event: Event)",
    "prototype": "MediaStream"
  },
  "webkitMediaStream": {
    "prototype": "MediaStream"
  },
  "SourceInfo": {
    "label": "string",
    "id": "string",
    "kind": "string",
    "facing": "string",
    "prototype": "SourceInfo"
  },
  "LocalMediaStream": {
    "stop": "fn()"
  },
  "MediaStreamTrack": {
    "kind": "string",
    "label": "string",
    "enabled": "bool",
    "LIVE": "number",
    "MUTED": "number",
    "ENDED": "number",
    "readyState": "number",
    "onmute": "fn(event: Event)",
    "onunmute": "fn(event: Event)",
    "onended": "fn(event: Event)",
    "prototype": "MediaStreamTrack",
    "getSources": "fn(callback: fn(sources: [SourceInfo]))"
  },
  "streamURL": {
    "createObjectURL": "fn(stream: MediaStream) -> string"
  },
  "WebkitURL": {},
  "webkitURL": {
    "prototype": "WebkitURL",
    "createObjectURL": "fn(stream: MediaStream) -> string"
  },
  "!name": "MediaStream.d.ts"
}

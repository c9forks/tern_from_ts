{
  "WebCola": {
    "Adaptor": {
      "avoidOverlaps": "fn(avodOverLaps: bool) -> Adaptor",
      "constraints": "fn(constraints: ?) -> Adaptor",
      "convergenceThreshold": "fn(convergenceThreshold: number) -> Adaptor",
      "dragend": "fn(node: ?)",
      "dragstart": "fn(node: ?)",
      "flowLayout": "fn(axis: string, minSeparation: number) -> Adaptor",
      "handleDisconnected": "fn(handleDisconnected: bool) -> Adaptor",
      "links": "fn(links: ?) -> Adaptor",
      "linkDistance": "fn(linkLength: number) -> Adaptor",
      "nodes": "fn(nodes: ?) -> Adaptor",
      "resume": "fn()",
      "size": "fn(dimension: [number]) -> Adaptor",
      "start": "fn(initialUnconstrainedIterations: number, initialUserConstraintIterations: number, initialAllConstraintsIterations: number)",
      "stop": "fn()"
    },
    "Cola": {
      "adaptor": "fn(options: ?) -> Adaptor",
      "start": "fn()",
      "stop": "fn()"
    },
    "Constraint": {
      "axis": "string",
      "gap": "number",
      "left": "number",
      "right": "number"
    },
    "FlowLayout": {
      "axis": "string",
      "minSeparation": "number"
    },
    "Node": {
      "height": "number",
      "id": "string",
      "size": "number",
      "width": "number",
      "x": "number",
      "y": "number"
    },
    "Options": {
      "avoidOverlaps": "bool",
      "convergenceThreshold": "number",
      "constraints": "[]",
      "flowLayout": "FlowLayout",
      "handleDisconnected": "bool",
      "linkDistance": "number",
      "initialUnconstrainedIterations": "number",
      "initialUserConstraintIterations": "number",
      "initialAllConstraintsIterations": "number",
      "symmetricDiffLinkLengths": "number"
    }
  },
  "cola": "WebCola.Cola",
  "!name": "webcola.d.ts",
  "!define": {
    "": {}
  }
}

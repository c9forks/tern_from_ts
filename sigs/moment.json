{
  "moment": {
    "MomentInput": {
      "years": "number",
      "y": "number",
      "months": "number",
      "M": "number",
      "weeks": "number",
      "w": "number",
      "days": "number",
      "d": "number",
      "hours": "number",
      "h": "number",
      "minutes": "number",
      "m": "number",
      "seconds": "number",
      "s": "number",
      "milliseconds": "number",
      "ms": "number"
    },
    "Duration": {
      "humanize": "fn(withSuffix?: bool) -> string",
      "as": "fn(units: string) -> number",
      "milliseconds": "fn() -> number",
      "asMilliseconds": "fn() -> number",
      "seconds": "fn() -> number",
      "asSeconds": "fn() -> number",
      "minutes": "fn() -> number",
      "asMinutes": "fn() -> number",
      "hours": "fn() -> number",
      "asHours": "fn() -> number",
      "days": "fn() -> number",
      "asDays": "fn() -> number",
      "months": "fn() -> number",
      "asMonths": "fn() -> number",
      "years": "fn() -> number",
      "asYears": "fn() -> number",
      "add": "fn(n: number, p: string) -> Duration",
      "subtract": "fn(n: number, p: string) -> Duration",
      "toISOString": "fn() -> string"
    },
    "Moment": {
      "format": "fn(format: string) -> string",
      "fromNow": "fn(withoutSuffix?: bool) -> string",
      "startOf": "fn(unitOfTime: string) -> Moment",
      "endOf": "fn(unitOfTime: string) -> Moment",
      "add": "fn(unitOfTime: string, amount: number) -> Moment",
      "subtract": "fn(unitOfTime: string, amount: number) -> Moment",
      "calendar": "fn() -> string",
      "clone": "fn() -> Moment",
      "local": "fn() -> Moment",
      "utc": "fn() -> Moment",
      "isValid": "fn() -> bool",
      "year": "fn(y: number) -> Moment",
      "quarter": "fn() -> number",
      "month": "fn(M: number) -> Moment",
      "day": "fn(d: number) -> Moment",
      "date": "fn(d: number) -> Moment",
      "hour": "fn(h: number) -> Moment",
      "hours": "fn(h: number) -> Moment",
      "minute": "fn(m: number) -> Moment",
      "minutes": "fn(m: number) -> Moment",
      "second": "fn(s: number) -> Moment",
      "seconds": "fn(s: number) -> Moment",
      "millisecond": "fn(ms: number) -> Moment",
      "milliseconds": "fn(ms: number) -> Moment",
      "weekday": "fn() -> number",
      "isoWeekday": "fn() -> number",
      "weekYear": "fn() -> number",
      "isoWeekYear": "fn() -> number",
      "week": "fn() -> number",
      "weeks": "fn() -> number",
      "isoWeek": "fn() -> number",
      "isoWeeks": "fn() -> number",
      "weeksInYear": "fn() -> number",
      "isoWeeksInYear": "fn() -> number",
      "dayOfYear": "fn() -> number",
      "from": "fn(f: Moment) -> string",
      "diff": "fn(b: Moment) -> number",
      "toDate": "fn() -> Date",
      "toISOString": "fn() -> string",
      "unix": "fn() -> number",
      "isLeapYear": "fn() -> bool",
      "zone": "fn() -> number",
      "daysInMonth": "fn() -> number",
      "isDST": "fn() -> bool",
      "isBefore": "fn() -> bool",
      "isAfter": "fn() -> bool",
      "isSame": "fn(b: Moment) -> bool",
      "lang": "fn(language: string) -> Moment",
      "locale": "fn(language: string) -> Moment",
      "localeData": "fn(language: string) -> Moment",
      "max": "fn(date: Date) -> Moment",
      "min": "fn(date: Date) -> Moment",
      "get": "fn(unit: string) -> number",
      "set": "fn(unit: string, value: number) -> Moment"
    },
    "MomentCalendar": {
      "lastDay": "?",
      "sameDay": "?",
      "nextDay": "?",
      "lastWeek": "?",
      "nextWeek": "?",
      "sameElse": "?"
    },
    "MomentLanguage": {
      "months": "?",
      "monthsShort": "?",
      "weekdays": "?",
      "weekdaysShort": "?",
      "weekdaysMin": "?",
      "longDateFormat": "MomentLongDateFormat",
      "relativeTime": "MomentRelativeTime",
      "meridiem": "fn(hour: number, minute: number, isLowercase: bool)",
      "calendar": "MomentCalendar",
      "ordinal": "fn(num: number)"
    },
    "MomentLongDateFormat": {
      "L": "string",
      "LL": "string",
      "LLL": "string",
      "LLLL": "string",
      "LT": "string",
      "l": "string",
      "ll": "string",
      "lll": "string",
      "llll": "string",
      "lt": "string"
    },
    "MomentRelativeTime": {
      "future": "?",
      "past": "?",
      "s": "?",
      "m": "?",
      "mm": "?",
      "h": "?",
      "hh": "?",
      "d": "?",
      "dd": "?",
      "M": "?",
      "MM": "?",
      "y": "?",
      "yy": "?"
    },
    "MomentStatic": {
      "version": "string",
      "utc": "fn() -> Moment",
      "unix": "fn(timestamp: number) -> Moment",
      "invalid": "fn(parsingFlags?: Object) -> Moment",
      "isMoment": "fn() -> bool",
      "isDuration": "fn() -> bool",
      "lang": "fn(language?: string) -> string",
      "locale": "fn(language?: string) -> string",
      "localeData": "fn(language?: string) -> MomentLanguage",
      "longDateFormat": "?",
      "relativeTime": "?",
      "meridiem": "fn(hour: number, minute: number, isLowercase: bool)",
      "calendar": "?",
      "ordinal": "fn(num: number)",
      "duration": "fn(milliseconds: Number) -> Duration",
      "parseZone": "fn(date: string) -> Moment",
      "months": "fn() -> [string]",
      "monthsShort": "fn() -> [string]",
      "weekdays": "fn() -> [string]",
      "weekdaysShort": "fn() -> [string]",
      "weekdaysMin": "fn() -> [string]",
      "min": "fn(moments: [Moment]) -> Moment",
      "max": "fn(moments: [Moment]) -> Moment",
      "normalizeUnits": "fn(unit: string) -> string",
      "relativeTimeThreshold": "fn(threshold: string, limit: number)",
      "ISO_8601": "fn()"
    },
    "!type": "moment.MomentStatic"
  },
  "'moment'": "moment",
  "!name": "moment.d.ts"
}

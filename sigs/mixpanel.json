{
  "Mixpanel": {
    "people": "Mixpanel.People",
    "init": "fn(token: string, config?: [object Object], libraryName?: string) -> Mixpanel",
    "push": "fn(item: [?])",
    "disable": "fn(events?: [string])",
    "track": "fn(eventName: string, params?: [object Object], callback?: fn())",
    "track_links": "fn(querySelector: string, eventName: string, params?: [object Object])",
    "track_forms": "fn(querySelector: string, eventName: string, params?: [object Object])",
    "register": "fn(params: [object Object], days?: number)",
    "register_once": "fn(params: [object Object], defaultValue?: string, days?: number)",
    "unregister": "fn(propertyName: string)",
    "identify": "fn(id: string)",
    "get_distinct_id": "fn() -> string",
    "alias": "fn(alias: string, currentId?: string)",
    "set_config": "fn(config: [object Object])",
    "get_config": "fn() -> ret",
    "get_property": "fn(propertyName: string) -> ?",
    "People": {
      "set": "fn(keys: [object Object], callback?: fn())",
      "set_once": "fn(keys: [object Object], callback?: fn())",
      "increment": "fn(key: string)",
      "append": "fn(keys: [object Object])",
      "track_charge": "fn(amount: number, params?: [object Object], callback?: fn())",
      "clear_charges": "fn()",
      "delete_user": "fn()"
    }
  },
  "mixpanel": "Mixpanel",
  "!name": "mixpanel.d.ts",
  "!define": {
    "ret": {}
  }
}
